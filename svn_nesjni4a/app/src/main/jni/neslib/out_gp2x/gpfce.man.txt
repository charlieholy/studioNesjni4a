[About]
This is a gp2x port of the **great** Open Source NES emulator FCE Ultra:
http://fceultra.sourceforge.net.   If you enjoyed using this emulator, please
keep in mind that this would not have been possible without the hard work and
dedication of the FCE Ultra developers.

In case you don't know what the NES is about, see:
http://en.wikipedia.org/wiki/Famicom.


[Usage]
1)  Unzip the emulator onto some directory on your SD card.
2)  Since version 0.4 ROMs no longer have to be put to fixed location, so you can put them anywhere. Rom files can be zipped.
3)  The emulator will create a subdirectory in it's working directory called fceultra. Save states etc. go here. If you want to load saves from < 0.4 version, you should copy files from /mnt/sd/roms/nes/fceultra/fcs to <where_you_put_gpfce>/fceultra/fcs directory.
4)  Hit both volume keys to enter the menu.
5)  For FDS support, put disksys.rom in <where_you_put_gpfce>/fceultra
6)  For GameGenie support, put gg.rom in <where_you_put_gpfce>/fceultra


[Controls]
Since v0.4 controls are configurable. Default controls are:

B         - NES A
X         - NES B
Y         - NES A (turbo)
A         - NES B (turbo)
SELECT    - NES SELECT
START     - NES START
VOL +/-   - Vol control. Pressing both enters the menu. 

L & JOY   - Save state
R & JOY   - Load State

Note: JOY means press in on the joystick (i.e. not up/down/left/right)


gpfce can't emulate all input devices which FCE Ultra does, but it can handle gamepad emulation of course, plus it can emulate Zapper and the Arkanoid controller (the last two have hardcoded controls).

B is the emulated trigger button for the Zapper. X is also emulated as the trigger, but as long as you have it pressed down, no color detection will take place, which is effectively like pulling the trigger while the Zapper is pointed away from the television screen. Note that you must press X for a short time to have the desired effect.

For Zapper and the Arkanoid controller Y increases the movement speed, A decreases.


[Palettes]
gpfce has similar palette options as FCE Ultra, so here is modified excerpt from FCE Ultra manual:

FCE Ultra has many palette features, including loading a custom palette to replace the default NES palette (see FCE Ultra option in options menu).
The palette from an NTSC NES can also be generated on-the-fly.

First, a note on on the format of external palettes; Palette files are expected to contain 64 8-bit RGB triplets(each in that order; red comes first in the triplet in the file, then green, then blue). Each 8-bit value represents brightness for that particular color. 0 is minimum, 255 is maximum.

Palettes can be set on a per-game basis. To do this, put a palette file in the <where_you_put_gpfce>/fceultra/pal directory with the same base filename as the game you wish to associate with and add the extension "pal". Examples:

  File name:              Palette file name:
   BigBad.nes              BigBad.pal
   BigBad.zip              BigBad.pal
   BigBad.Better.nes       BigBad.Better.pal


With so many ways to choose a palette, figuring out which one will be active may be difficult. Here's a list of what palettes will be used, in order from highest priority to least priority(if a condition doesn't exist for a higher priority palette, the emulator will continue down its list of palettes).

    * Palette loaded from the "fceultra/pal" directory.
    * NTSC Color Emulation(only for NTSC NES games).
    * VS Unisystem palette(if the game is a VS Unisystem game and a palette is available).
    * Custom global palette (set in the menu).
    * Default NES palette.


[Famicom Disk System]
You will need the FDS BIOS ROM image in <where_you_put_gpfce>/fceultra directory.
It's size should be 8192 bytes and it must be named "disksys.rom".
gpfce will not load FDS games without this file.

You will also probably need configure keys for swapping the virtual FDS disks, they are configurable in Controls menu.

Two types of FDS disk images are supported: disk images with the FWNES-style header, and disk images with no header. The number of sides on headerless disk images is calculated by the total file size, so don't put extraneous data at the end of the file.


[VS Unisystem]
gpfce currently only supports VS Unisystem ROM images in the iNES format. See FCE Ultra manual for the list of supported games.

You will need to configure a key to insert coins, see Controls option in the menu.


[Cheats]
For cheating you can ether use the authentic game genie support, or the .cht files.

To use authentic game genie, place appropriate gg.rom into <where_you_put_gpfce>/fceultra. Use the FCE Ultra option menu or -gg on commandline to activate the game genie rom. The ROM image may either be the 24592 byte iNES-format image, or the 4352 byte raw ROM image.

The .cht files fould be placed into <where_you_put_gpfce>/fceultra/cheats/ directory. They should have the same base filename as the game you wish to associate with with the extension "cht". Examples:

  File name:              Palette file name:
   BigBad.nes              BigBad.cht
   BigBad.zip              BigBad.cht
   BigBad.Better.nes       BigBad.Better.cht

If you have done everything correctly, Cheat option will appear in the main menu after you load the ROM. You can activate/deactivate cheats by pressing B. For description of .cht file format, see http://fceultra.sourceforge.net/cheat.php

[IPS patch support]
Place the IPS files in the same directory as the ROMs to load, and name them filename.ips or filename.something.ips. Examples:

  File name:              IPS file names:
   BigBad.nes              BigBad.nes.ips           BigBad.nes.somehack.ips
   BigBad.zip              BigBad.zip.ips           BigBad.zip.badhack.ips
   BigBad.Better.nes       BigBad.Better.nes.ips    BigBad.Better.nes.evenbetterhack.ips

Patching is supported for all supported formats (iNES, FDS, UNIF, and NSF), but it will probably only be useful for the iNES and FDS formats. UNIF files can't be patched well with the IPS format because they are chunk-based with no fixed offsets.


[FCM movies]
Version 0.4 has partial FCM movie support. Most of the movies desync due to different timing, but some of them can be played. Note that 'accurate renderer' option solves some desync problems. There is only playback support. Files should be placed in the ROMs directory along with the ROMs themselves. Naming is the same as for IPS patches (see previous section), buf use .fcm extension instead of .ips.


[Credits/thanks]
- Original base code of FCE Ultra by Xodnizel, Bero.
- Porting/optimization/integration/frontend for 0.3 and 0.4 by notaz.
- Versions 0.1 and 0.2 by zzhu8192 (http://www.unicorn-jockey.com).
- asm CPU core from FCA and Little John GP32.
- Minimal library by rlyeh.
- Additional low-level GP2X libs by Hermes/PS2Reality, theoddbot,
  god_at_hell, Puck2099.

additional thanks:
- Cruel and DaveC from gp32x boards for beta testing.
- All FCE Ultra contributors listed in
  http://fceultra.sourceforge.net/docs.php

...and everyone whose name my mind has misplaced.

zzhu8192's thanks:
- To lots of talented developers on the http://www.gp32x.com/board/
  Reesy, Squidge, etc.  for responding to my technical questions.
- Thanks to 
- Lil-kun - for the neat GPFCE logo and the Web Site (under construction) :D
- Referenced source code from MameGP2X (Franxis) and FCEU-0.3 gp2x (Noname)
- Awesome wiki: http://wiki.gp2x.org/wiki/Main_Page
- Awesome gp2x site: http://www.gp32x.com/
- ryleh's minimal lib - w/o which this wouldn't have worked
- FCE Ultra developers (http://fceultra.sourceforge.net/) 
  for the wonderful and feature rich NES emulator.
- kounch for Selector frontend - works great for lazy developers like me.  :-D
  I have sent my changes to kounch, so hopefully the changes will make it into
  version 1.2 or later.
- gp2x community - just plain rocks


